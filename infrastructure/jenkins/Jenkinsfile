pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        ECR_ACCOUNT_ID = '123456789012'
        ECR_REPO_NAME = 'banking-platform'
        IMAGE_TAG = "${env.BUILD_NUMBER}"
        AWS_CREDENTIALS = credentials('aws-creds')
    }

    stages {
        stage('Checkout Code') {
            steps {
                git url: 'https://github.com/harismalabis/banking-platform.git'
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    def services = ['account', 'transaction', 'user']
                    for (svc in services) {
                        def image = "${ECR_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}-${svc}:${IMAGE_TAG}"
                        
                        sh """
                        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                        docker build -t ${image} ./microservices/${svc}
                        docker push ${image}
                        """
                    }
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    def services = ['account', 'transaction', 'user']
                    for (svc in services) {
                        def image = "${ECR_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}-${svc}:${IMAGE_TAG}"
                        sh """
                        kubectl set image deployment/${svc}-deployment ${svc}-container=${image} --namespace=banking
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✅ Build and deployment succeeded!"
        }
        failure {
            echo "❌ Build or deployment failed."
        }
    }
}
